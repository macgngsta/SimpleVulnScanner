package com.gregtam.scanner;

import java.util.List;

import org.apache.log4j.Logger;

import com.gregtam.scanner.exception.ParseException;
import com.gregtam.scanner.file.FileUtil;
import com.gregtam.scanner.graph.GraphProcessor;
import com.gregtam.scanner.model.FileObject;
import com.gregtam.scanner.php.PhpAntlrParser;
import com.gregtam.scanner.util.ValidationUtil;

public class SimpleVulnerabilityScanner
{

	static Logger logger = Logger.getLogger(SimpleVulnerabilityScanner.class
			.getName());

	/**
	 * @param args
	 */
	public static void main(String[] args)
	{
		if (args != null && args.length > 0)
		{
			String folderPath = args[0];

			if (ValidationUtil.isNotNullAndEmpty(folderPath))
			{
				// read in the folder from arg0
				logger.debug("reading from: " + folderPath);

				FileUtil fu = new FileUtil();
				List<FileObject> myList = fu.getAllFiles(folderPath);

				logger.debug("found " + myList.size() + " files to process");

				// from the file list, read into the php code and extract
				// relationships
				logger.debug("extracting relationships");

				// load up the parser
				PhpAntlrParser myParser = new PhpAntlrParser();
				if (myList != null && !myList.isEmpty())
				{
					for (FileObject fo : myList)
					{
						if (fo != null)
						{
							logger.debug("reading: " + fo.getName());

							try
							{
								myParser.parse(fo);

								GraphProcessor.getInstance().print();
								// load into graphdb
								// gp.processDataList(myData);

							}
							catch (ParseException e)
							{
								// TODO Auto-generated catch block
								e.printStackTrace();
								logger.debug("skipping : " + fo.getName());
							}
							catch (Exception e)
							{
								e.printStackTrace();
								logger.debug("massive failure");
							}
						}
					}
				}

				// use vuln modules to test db
				logger.debug("searching for vulns");

				// print out report
				logger.debug("printing report");
			}
			else
			{
				logger.error("folder path was null or empty.");
			}
		}
		else
		{
			logger.error("no args passed");
		}
	}
}
